variables:
  MAVEN_DOCKER_IMAGE: "maven:3.6.0-jdk-11"
  JDK_WIN_URL: "https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_windows-x64_bin.zip"

stages:
  - build
  - jdk
  - installer

build:
  image: $MAVEN_DOCKER_IMAGE
  stage: build
  except:
    - tags
  script:
    - pushd Client
    - mvn -B -Djavafx.platform=win clean package
    - popd
    - mv Client/target/lual-client.exe .
  artifacts:
    paths:
      - lual-client.exe
    expire_in: 1 hour

build-release:
  image: $MAVEN_DOCKER_IMAGE
  stage: build
  only:
    - tags
  script:
    - pushd Client
    - mvn -B versions:set -DnewVersion=${CI_COMMIT_REF_NAME}
    - mvn -B -Djavafx.platform=win clean package
    - popd
    - mv Client/target/lual-client.exe .
  artifacts:
    paths:
      - lual-client.exe
    expire_in: 1 hour

jdk:
  image: alpine
  stage: jdk
  only:
    - tags
  dependencies:
    - build-release
  script:
    - apk update && apk add ca-certificates && update-ca-certificates && apk add openssl wget unzip bzip2
    - wget $JDK_WIN_URL && unzip *.zip && rm *.zip && mv jdk* jdk
    - tar -cjf transfer.tar.bz2 jdk/ ./*.exe
  artifacts:
    paths:
      - transfer.tar.bz2
    expire_in: 1 hour

installer:
  image: tiogt/nsis
  stage: installer
  only:
    - tags
  dependencies:
    - jdk
  script:
    - tar -xjf transfer.tar.bz2
    - makensis lual-client-setup.nsi
  artifacts:
    paths:
      - lual-client-setup.exe
    expire_in: 1 day

owasp:
  image: $MAVEN_DOCKER_IMAGE
  stage: build
  when: manual
  script:
    - pushd Client
    - mvn -B -Djavafx.platform=win dependency-check:check
    - popd
    - mv Client/target/dependency-check-report.html .
  artifacts:
    paths:
      - dependency-check-report.html
    expire_in: 1 day
